# gui/initialize_git_window.py
from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel,
    QLineEdit, QPushButton, QFileDialog, QMessageBox
)
import os
import json
from src.core import ProjectManager
from src.utils import get_logger, FileHandler


class InitializeWindow(QWidget):
    def __init__(self, main_window, logger):
        super().__init__()
        self.main_window = main_window
        self.logger = logger
        self.current_config_path = None
        self.setup_ui()
        self.load_main_config_if_exists()

    def setup_ui(self):
        """–°–æ–∑–¥–∞—ë—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–∫–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
        layout = QVBoxLayout()
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(15)

        # –ü–æ–ª—è –≤–≤–æ–¥–∞
        self.setup_config_controls(layout)
        self.setup_git_fields(layout)
        self.setup_init_button(layout)

        self.setLayout(layout)

    def setup_config_controls(self, parent_layout):
        """–ö–æ–Ω—Ç—Ä–æ–ª—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"""
        config_layout = QHBoxLayout()

        self.btn_select_config = QPushButton("üìÅ –í—ã–±—Ä–∞—Ç—å")
        self.btn_select_config.setMinimumHeight(40)
        self.btn_select_config.clicked.connect(self.select_config)
        config_layout.addWidget(self.btn_select_config)

        self.btn_create_config = QPushButton("üÜï –°–æ–∑–¥–∞—Ç—å")
        self.btn_create_config.setMinimumHeight(40)
        self.btn_create_config.clicked.connect(self.create_config)
        config_layout.addWidget(self.btn_create_config)

        self.btn_set_main = QPushButton("‚≠ê –û—Å–Ω–æ–≤–Ω–æ–π")
        self.btn_set_main.setMinimumHeight(40)
        self.btn_set_main.setEnabled(False)
        self.btn_set_main.clicked.connect(self.set_main_config)
        config_layout.addWidget(self.btn_set_main)

        parent_layout.addLayout(config_layout)

        # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ñ–∏–≥–∞
        self.config_status = QLabel("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
        self.config_status.setStyleSheet("color: #E53E3E; font-style: italic;")
        parent_layout.addWidget(self.config_status)

    def setup_git_fields(self, parent_layout):
        """–ü–æ–ª—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Git"""
        # –ò–º—è
        parent_layout.addWidget(QLabel("–ò–º—è:", styleSheet="font-weight: bold;"))
        self.name_input = QLineEdit()
        self.name_input.setPlaceholderText("–í–∞—à–µ –∏–º—è (–¥–ª—è Git)")
        self.name_input.setMinimumHeight(40)
        parent_layout.addWidget(self.name_input)

        # Email
        parent_layout.addWidget(QLabel("Email:", styleSheet="font-weight: bold;"))
        self.email_input = QLineEdit()
        self.email_input.setPlaceholderText("–í–∞—à email (–¥–ª—è Git)")
        self.email_input.setMinimumHeight(40)
        parent_layout.addWidget(self.email_input)

        # URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        parent_layout.addWidget(QLabel("–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:", styleSheet="font-weight: bold;"))
        self.repo_url_input = QLineEdit()
        self.repo_url_input.setPlaceholderText("https://github.com/user/repo.git")
        self.repo_url_input.setMinimumHeight(40)
        parent_layout.addWidget(self.repo_url_input)

    def setup_init_button(self, parent_layout):
        """–ö–Ω–æ–ø–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
        self.btn_init = QPushButton("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Git")
        self.btn_init.setMinimumHeight(50)
        self.btn_init.setStyleSheet("font-size: 16px; font-weight: bold;")
        self.btn_init.clicked.connect(self.initialize_git)
        parent_layout.addWidget(self.btn_init)

    def get_main_config_path_file(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞"""
        appdata = os.getenv('APPDATA') or os.path.expanduser('~/.config')
        config_dir = os.path.join(appdata, "GitPoster")
        os.makedirs(config_dir, exist_ok=True)
        return os.path.join(config_dir, "main_config_path.json")

    def load_main_config_if_exists(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ"""
        main_config_file = self.get_main_config_path_file()

        if not os.path.exists(main_config_file):
            return

        try:
            with open(main_config_file, 'r') as f:
                data = json.load(f)
                main_path = data.get("main_config_path", "")

            if os.path.exists(main_path):
                self.load_config(main_path)
                self.current_config_path = main_path
                self.btn_set_main.setEnabled(False)
                self.logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥: {main_path}")
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")

    def select_config(self):
        """–í—ã–±–æ—Ä —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞"""
        file_path, _ = QFileDialog.getOpenFileName(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª",
            "",
            "JSON Files (*.json);;All Files (*)"
        )

        if not file_path:
            return

        try:
            self.load_config(file_path)
            self.current_config_path = file_path
            self.btn_set_main.setEnabled(True)
            self.logger.info(f"–ö–æ–Ω—Ñ–∏–≥ –≤—ã–±—Ä–∞–Ω: {file_path}")
        except Exception as e:
            self.logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥:\n{str(e)}")

    def create_config(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞"""
        file_path, _ = QFileDialog.getSaveFileName(
            self,
            "–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é",
            "",
            "JSON Files (*.json)"
        )

        if not file_path:
            return

        default_config = {
            "user.name": "",
            "user.email": "",
            "last_repo_url": ""
        }

        try:
            FileHandler.save_config(default_config, file_path)
            self.load_config(file_path)
            self.current_config_path = file_path
            self.btn_set_main.setEnabled(True)
            self.logger.info(f"–ù–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å–æ–∑–¥–∞–Ω: {file_path}")
        except Exception as e:
            self.logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥:\n{str(e)}")

    def set_main_config(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ"""
        if not self.current_config_path:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            return

        try:
            main_config_file = self.get_main_config_path_file()
            with open(main_config_file, 'w') as f:
                json.dump({"main_config_path": self.current_config_path}, f, indent=2)

            self.btn_set_main.setEnabled(False)
            self.logger.info(f"–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.current_config_path}")
            QMessageBox.information(self, "–ì–æ—Ç–æ–≤–æ", "–ö–æ–Ω—Ñ–∏–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π")
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥")

    def load_config(self, config_path):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        try:
            config = FileHandler.load_config(config_path)

            # –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            required = {"user.name", "user.email", "last_repo_url"}
            if not all(k in config for k in required):
                raise ValueError("–ö–æ–Ω—Ñ–∏–≥ –ø–æ–≤—Ä–µ–∂–¥—ë–Ω: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è")

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π
            self.name_input.setText(config["user.name"])
            self.email_input.setText(config["user.email"])
            self.repo_url_input.setText(config["last_repo_url"])

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            self.config_status.setText(f"–ö–æ–Ω—Ñ–∏–≥: {os.path.basename(config_path)}")
            self.config_status.setStyleSheet("color: #38A169; font-weight: bold;")
            self.current_config_path = config_path

        except Exception as e:
            self.config_status.setText(f"–û—à–∏–±–∫–∞: {str(e)}")
            self.config_status.setStyleSheet("color: #E53E3E; font-weight: bold;")
            raise

    def initialize_git(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
        if not self.current_config_path:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            return

        name = self.name_input.text().strip()
        email = self.email_input.text().strip()
        repo_url = self.repo_url_input.text().strip()

        if not name or not email:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ email")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        project_path = self.main_window.git_work_window.path_label.text()
        if project_path == "–ü–∞–ø–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞" or not os.path.exists(project_path):
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞")
            return

        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
            project_manager = ProjectManager(project_path, self.logger)
            result = project_manager.initialize(repo_url, name, email)

            if result["success"]:
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ñ–∏–≥
                config = {
                    "user.name": name,
                    "user.email": email,
                    "last_repo_url": repo_url
                }
                FileHandler.save_config(config, self.current_config_path)

                self.logger.info(f"–ö–æ–Ω—Ñ–∏–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {self.current_config_path}")
                QMessageBox.information(self, "–ì–æ—Ç–æ–≤–æ", "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")

                # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Ä–∞–±–æ—Ç—ã —Å Git
                self.main_window.switch_content(0)
                self.main_window.git_work_window.refresh_status()
            else:
                raise Exception(result["error"])

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:\n{str(e)}")